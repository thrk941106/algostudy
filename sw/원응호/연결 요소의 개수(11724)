#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
using namespace std;
int n, m, start;
vector<int>v[2001];
bool check[2001];
int fin = 0;
void dfs(int node) {
	check[node] = true;
	
	for (int i = 0; i < v[node].size(); i++) {
		int next = v[node][i];
		if (!check[next]) {
			dfs(next);
		}
	}
}
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);

	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	


	for (int i = 1; i <= n; i++) {
		if (check[i] == true)
			continue;
		dfs(i);
		fin++;
	}
	cout << fin;


}
