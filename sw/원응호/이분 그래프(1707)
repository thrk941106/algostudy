#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<string>
using namespace std;
int n, m,k;
vector<int> answer;
vector<int> vt[20001];
string result;
int check[20001];

void dfs(int node,int color) {
	check[node] = color;
	answer.push_back(node);
	for (int i = 0; i < vt[node].size(); i++) {
		int next = vt[node][i];
		if (check[next]==0) {
			dfs(next,3-color);
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> k;
	while (k--) {
		bool flag = true;
		int v, e;
		cin >> v >> e;
		for (int i = 1; i <= v; i++) {
			vt[i].clear();
			check[i] = 0;
		}
		for (int i = 0; i < e; i++) {
			int u, v;
			cin >> u >> v;
			vt[u].push_back(v);
			vt[v].push_back(u);

		}
		for (int i = 1; i <= v; i++) {
			if(check[i]==0)
				dfs(i, 1);
		}
		for (int i = 1; i <= v; i++) {
			int color = check[i];
			for (int j = 0; j < vt[i].size(); j++) {
				if (color==check[vt[i][j]])
					flag = false;//이분 아님
				
			}
		}
		if (flag)//flag==true
			cout << "YES\n";
		else
			cout << "NO\n";
	}

	
}
