#include<iostream>
#include<queue>
#include<string.h>
#include<cstdio>
using namespace std;
int n, m;
int arr[101][101];
int check[101][101];
deque<pair<int, int > > q;

void bfs() {
	int dx[] = { -1,0,0,1 };
	int dy[] = { 0,-1,1,0 };
	q.push_back(make_pair(1, 1));
	check[1][1] = 0;

	while (!q.empty()) {
		int x = q.front().first;
		int y = q.front().second;
		q.pop_front();

		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			if (1 <= nx && nx <= m && 1 <= ny && ny <= n && check[nx][ny]==-1) {
				if (arr[nx][ny]==0) {
					check[nx][ny]= check[x][y];
					q.push_front(make_pair(nx, ny));
				}
				else if (arr[nx][ny] == 1) {
					check[nx][ny]= check[x][y] + 1;
					q.push_back(make_pair(nx, ny));
				}


			}
		}
	}

}

int main() {
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= m; i++) {
		for (int j = 1; j <= n; j++) {
			scanf("%1d", &arr[i][j]);
		}
	}
	memset(check, -1, sizeof(check));
	bfs();
	cout << check[m][n];
}
