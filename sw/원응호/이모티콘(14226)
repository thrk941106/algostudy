#include<iostream>
#include<queue>
#include<string.h>
using namespace std;
int n;
int arr[1001][1001];
queue<pair<int,int > > q;

void bfs() {
	q.push(make_pair(1,0));
	arr[1][0] = 0;

	while (!q.empty()) {
		int x = q.front().first;
		int y = q.front().second;
		q.pop();
		
		if (x + y <= n && arr[x + y][y] == -1){//paste
			arr[x + y][y] = arr[x][y] + 1;
			q.push(make_pair(x + y, y));
		}
		if (arr[x][x] == -1) {//copy
			arr[x][x] = arr[x][y] + 1;;
			q.push(make_pair(x, x));
		}
		if (arr[x - 1][y] == -1 && x - 1 >= 0) {//delete
			arr[x - 1][y] = arr[x][y] + 1;;
			q.push(make_pair(x - 1, y));
		}

	}
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> n;
	memset(arr, -1, sizeof(arr));
	bfs();
	int min = 1001;
	for (int i = 0; i <= n; i++) {
		if (min > arr[n][i] && arr[n][i]!=-1)
			min = arr[n][i];
	}
	cout << min;
}
