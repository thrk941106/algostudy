#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<queue>
using namespace std;
int n, m;
int arr[100][100];
int ans[100][100];
int check[100][100];
int cnt = 0;
int d=0;
queue<pair<int,int> > q;
void bfs(int x, int y) {
	check[x][y] = 1;
	q.push(make_pair(x,y));

	int dx[] = { -1,0,0,1 };
	int dy[] = { 0,-1,1,0 };
	while (!q.empty()) {
		int nodex = q.front().first;
		int nodey = q.front().second;
		if (nodex == n - 1 && nodey == m - 1)
			return;

		q.pop();
		
		for (int i = 0; i < 4; i++) {
			int nx = nodex + dx[i];
			int ny = nodey + dy[i];
			int next = check[nodex][nodey] + 1;

			
			if (0<=nx && nx<n && 0<=ny && ny < m && check[nx][ny]==0&&arr[nx][ny]==1) {
				check[nx][ny] = next;
				q.push(make_pair(nx, ny));
			}
		}
	}
}
int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf("%1d", &arr[i][j]);
		}
	}


	bfs(0, 0);
	cout << check[n - 1][m - 1];

}
